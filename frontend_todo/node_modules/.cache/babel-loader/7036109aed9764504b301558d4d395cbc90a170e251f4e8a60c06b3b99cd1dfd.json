{"ast":null,"code":"import axios from 'axios';\nexport const GetJwtToken = () => localStorage.getItem('access_token');\n_c = GetJwtToken;\nexport const GetRefreshToken = () => localStorage.getItem('refresh_token');\n_c2 = GetRefreshToken;\nconst refreshAccessToken = async () => {\n  try {\n    const refreshToken = GetRefreshToken();\n    const response = await axios.post('http://127.0.0.1:8000/api/token/refresh/', {\n      refresh: refreshToken\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const newAccessToken = response.data.access;\n    localStorage.setItem('access_token', newAccessToken);\n    return newAccessToken;\n  } catch (error) {\n    console.error('Error refreshing access token:', error.message);\n    throw error;\n  }\n};\nexport const MakeAuthenticatedRequest = async (url, method = 'GET', data = null, requireAuth = true) => {\n  try {\n    let headers = requireAuth ? {\n      Authorization: `Bearer ${GetJwtToken()}`\n    } : {};\n    print(url);\n    if (requireAuth && !headers.Authorization) {\n      throw new Error('No token found');\n    }\n    const config = {\n      method,\n      url,\n      headers,\n      ...(data && {\n        data\n      })\n    };\n    const response = await axios(config);\n    return response;\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      try {\n        const newAccessToken = await refreshAccessToken();\n        const headers = {\n          Authorization: `Bearer ${newAccessToken}`\n        };\n        const config = {\n          method,\n          url,\n          headers,\n          ...(data && {\n            data\n          })\n        };\n        const response = await axios(config);\n        return response;\n      } catch (refreshError) {\n        console.error('Refresh token error:', refreshError.message);\n        throw refreshError;\n      }\n    } else {\n      console.error('Error in authenticated request:', error.message);\n      throw error;\n    }\n  }\n};\n_c3 = MakeAuthenticatedRequest;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GetJwtToken\");\n$RefreshReg$(_c2, \"GetRefreshToken\");\n$RefreshReg$(_c3, \"MakeAuthenticatedRequest\");","map":{"version":3,"names":["axios","GetJwtToken","localStorage","getItem","_c","GetRefreshToken","_c2","refreshAccessToken","refreshToken","response","post","refresh","headers","newAccessToken","data","access","setItem","error","console","message","MakeAuthenticatedRequest","url","method","requireAuth","Authorization","print","Error","config","status","refreshError","_c3","$RefreshReg$"],"sources":["/Users/ayanjitdutta/to-do-list/frontend_todo/src/APIHelper.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const GetJwtToken = () => localStorage.getItem('access_token');\nexport const GetRefreshToken = () => localStorage.getItem('refresh_token');\n\nconst refreshAccessToken = async () => {\n    try {\n        const refreshToken = GetRefreshToken();\n        const response = await axios.post('http://127.0.0.1:8000/api/token/refresh/', {\n            refresh: refreshToken,\n        }, {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        \n        const newAccessToken = response.data.access;\n        localStorage.setItem('access_token', newAccessToken);\n        return newAccessToken;\n    } catch (error) {\n        console.error('Error refreshing access token:', error.message);\n        throw error;\n    }\n};\n\nexport const MakeAuthenticatedRequest = async (url, method = 'GET', data = null, requireAuth = true) => {\n    try {\n        let headers = requireAuth ? { Authorization: `Bearer ${GetJwtToken()}` } : {};\n        print(url)\n        if (requireAuth && !headers.Authorization) {\n            throw new Error('No token found');\n        }\n        const config = {\n            method,\n            url,\n            headers,\n            ...(data && { data }),\n        };\n\n        const response = await axios(config);\n        return response;\n        \n    } catch (error) {\n        if (error.response && error.response.status === 401) {\n            try {\n                const newAccessToken = await refreshAccessToken();\n                \n                const headers = { Authorization: `Bearer ${newAccessToken}` };\n                const config = {\n                    method,\n                    url,\n                    headers,\n                    ...(data && { data }),\n                };\n                \n                const response = await axios(config);\n                return response;\n            } catch (refreshError) {\n                console.error('Refresh token error:', refreshError.message);\n                throw refreshError;\n            }\n        } else {\n            console.error('Error in authenticated request:', error.message);\n            throw error;\n        }\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAMC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;AAACC,EAAA,GAAzDH,WAAW;AACxB,OAAO,MAAMI,eAAe,GAAGA,CAAA,KAAMH,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;AAACG,GAAA,GAA9DD,eAAe;AAE5B,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACA,MAAMC,YAAY,GAAGH,eAAe,CAAC,CAAC;IACtC,MAAMI,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,0CAA0C,EAAE;MAC1EC,OAAO,EAAEH;IACb,CAAC,EAAE;MACCI,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,MAAMC,cAAc,GAAGJ,QAAQ,CAACK,IAAI,CAACC,MAAM;IAC3Cb,YAAY,CAACc,OAAO,CAAC,cAAc,EAAEH,cAAc,CAAC;IACpD,OAAOA,cAAc;EACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC9D,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMG,wBAAwB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,MAAM,GAAG,KAAK,EAAER,IAAI,GAAG,IAAI,EAAES,WAAW,GAAG,IAAI,KAAK;EACpG,IAAI;IACA,IAAIX,OAAO,GAAGW,WAAW,GAAG;MAAEC,aAAa,EAAE,UAAUvB,WAAW,CAAC,CAAC;IAAG,CAAC,GAAG,CAAC,CAAC;IAC7EwB,KAAK,CAACJ,GAAG,CAAC;IACV,IAAIE,WAAW,IAAI,CAACX,OAAO,CAACY,aAAa,EAAE;MACvC,MAAM,IAAIE,KAAK,CAAC,gBAAgB,CAAC;IACrC;IACA,MAAMC,MAAM,GAAG;MACXL,MAAM;MACND,GAAG;MACHT,OAAO;MACP,IAAIE,IAAI,IAAI;QAAEA;MAAK,CAAC;IACxB,CAAC;IAED,MAAML,QAAQ,GAAG,MAAMT,KAAK,CAAC2B,MAAM,CAAC;IACpC,OAAOlB,QAAQ;EAEnB,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACR,QAAQ,IAAIQ,KAAK,CAACR,QAAQ,CAACmB,MAAM,KAAK,GAAG,EAAE;MACjD,IAAI;QACA,MAAMf,cAAc,GAAG,MAAMN,kBAAkB,CAAC,CAAC;QAEjD,MAAMK,OAAO,GAAG;UAAEY,aAAa,EAAE,UAAUX,cAAc;QAAG,CAAC;QAC7D,MAAMc,MAAM,GAAG;UACXL,MAAM;UACND,GAAG;UACHT,OAAO;UACP,IAAIE,IAAI,IAAI;YAAEA;UAAK,CAAC;QACxB,CAAC;QAED,MAAML,QAAQ,GAAG,MAAMT,KAAK,CAAC2B,MAAM,CAAC;QACpC,OAAOlB,QAAQ;MACnB,CAAC,CAAC,OAAOoB,YAAY,EAAE;QACnBX,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEY,YAAY,CAACV,OAAO,CAAC;QAC3D,MAAMU,YAAY;MACtB;IACJ,CAAC,MAAM;MACHX,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC/D,MAAMF,KAAK;IACf;EACJ;AACJ,CAAC;AAACa,GAAA,GAzCWV,wBAAwB;AAAA,IAAAhB,EAAA,EAAAE,GAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
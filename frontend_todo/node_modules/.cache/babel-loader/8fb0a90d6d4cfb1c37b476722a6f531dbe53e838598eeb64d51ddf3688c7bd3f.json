{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/to-do-list/frontend_todo/src/schedule.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskCard from './cards';\nimport TaskForm from './task_form';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Schedule() {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [availbale, setAvailable] = useState(false);\n  const [task, setTask] = useState({\n    taskID: \"DLNVDLV09030\",\n    name: \"Finish Project\",\n    description: \"Complete the final project report and submit it.\",\n    dueDate: \"2024-10-05\",\n    timeStart: \"10:00 AM\",\n    timeEnd: \"12:00 PM\",\n    allDay: \"Yes\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTask(prevTask => ({\n      ...prevTask,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Submitted Task:\", task);\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tag\",\n        children: \"CREATE A TASK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add_div\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setShowModal(true),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/add.png\",\n            alt: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list_div\",\n      children: /*#__PURE__*/_jsxDEV(TaskCard, {\n        task: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(TaskForm, {\n        task: task,\n        handleChange: handleChange,\n        handleSubmit: handleSubmit,\n        handleClose: () => setShowModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Schedule, \"HhTBbGMgL7l8u3zMXlgT874PUio=\");\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","TaskCard","TaskForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Schedule","_s","showModal","setShowModal","availbale","setAvailable","task","setTask","taskID","name","description","dueDate","timeStart","timeEnd","allDay","handleChange","e","value","target","prevTask","handleSubmit","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","src","alt","handleClose","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/to-do-list/frontend_todo/src/schedule.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TaskCard from './cards';\nimport TaskForm from './task_form';\n\nfunction Schedule() {\n    const [showModal, setShowModal] = useState(false);\n    const [availbale,setAvailable] = useState(false);\n    \n    const [task, setTask] = useState({\n        taskID: \"DLNVDLV09030\",\n        name: \"Finish Project\",\n        description: \"Complete the final project report and submit it.\",\n        dueDate: \"2024-10-05\",\n        timeStart: \"10:00 AM\",\n        timeEnd: \"12:00 PM\",\n        allDay: \"Yes\"\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setTask((prevTask) => ({\n            ...prevTask,\n            [name]: value,\n        }));\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"Submitted Task:\", task);\n        setShowModal(false);\n    };\n\n    return (\n        <div className=\"schedule\">\n            <div className=\"create_div\">\n                <div className=\"tag\">CREATE A TASK</div>\n                <div className=\"add_div\">\n                    <button type=\"button\" onClick={() => setShowModal(true)}>\n                        <img src=\"/images/add.png\" alt=\"Add\" />\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"list_div\">\n                <TaskCard task={task} />\n            </div>\n\n            {/* Modal for creating a task */}\n            {showModal && (\n                <>\n                    <TaskForm\n                        task={task}\n                        handleChange={handleChange}\n                        handleSubmit={handleSubmit}\n                        handleClose={() => setShowModal(false)}\n                    />\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default Schedule;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
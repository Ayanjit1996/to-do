{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/to-do-list/frontend_todo/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './navbar';\nimport Landing from './landingpage';\nimport { useEffect, useState } from 'react';\nimport OtpModal from './otp';\nimport Homeview from './homeview';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [signup, setSignup] = useState(false);\n  const [signin, setSignin] = useState(true);\n  const [signoff, setSignoff] = useState(false);\n  const [isOtpModalOpen, setOtpModalOpen] = useState(false);\n  const [landing, setLanding] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [Id, setId] = useState('');\n  const getJwtToken = () => localStorage.getItem('access_token');\n  const checkAuthStatus = async () => {\n    try {\n      const token = getJwtToken();\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await axios.get('http://127.0.0.1:8000/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        setIsLoggedIn(true);\n        setSignoff(true);\n        setSignin(false);\n        setSignup(false);\n        setLanding(false);\n      } else {\n        throw new Error('Token invalid');\n      }\n    } catch (error) {\n      console.error('Error checking login status:', error);\n\n      // Handle token expiry and reset authentication state\n      if (error.response && error.response.status === 401) {\n        // Handle 401 unauthorized error (token expired)\n        alert('Session expired. Please log in again.');\n        localStorage.removeItem('access_token'); // Remove expired token\n        setIsLoggedIn(false);\n        setSignin(true);\n        setSignup(false);\n        setSignoff(false);\n        setLanding(true);\n      } else {\n        // Handle any other errors\n        setIsLoggedIn(false);\n        setSignin(true);\n        setSignup(false);\n        setSignoff(false);\n        setLanding(true);\n      }\n    }\n  };\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const toggleSignup = () => {\n    setSignup(true);\n    setSignin(false);\n  };\n  const toggleSignin = () => {\n    setSignup(false);\n    setSignin(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      signup: signup,\n      signin: signin,\n      signoff: signoff,\n      toggleSignup: toggleSignup,\n      toggleSignin: toggleSignin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), landing && /*#__PURE__*/_jsxDEV(Landing, {\n      signup: signup,\n      signin: signin,\n      setOtpModalOpen: setOtpModalOpen,\n      setId: setId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(Homeview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(OtpModal, {\n      isOpen: isOtpModalOpen,\n      onClose: () => setOtpModalOpen(false),\n      Id: Id,\n      setIsLoggedIn: setIsLoggedIn,\n      setSignoff: setSignoff,\n      setSignin: setSignin,\n      setSignup: setSignup,\n      setLanding: setLanding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jotw+crOR8AYsdRuNxINtzKjOi8=\");\n_c = App;\nexport default App;\n\n// import './App.css';\n// import Navbar from './navbar';\n// import Landing from './landingpage';\n// import { useEffect, useState } from 'react';\n// import OtpModal from './otp';\n// import Homeview from './homeview';\n// import axios from 'axios';\n\n// function App() {\n//   const [signup, setSignup] = useState(false);\n//   const [signin, setSignin] = useState(true);\n//   const [signoff, setSignoff] = useState(false);\n//   const [isOtpModalOpen, setOtpModalOpen] = useState(false);\n//   const [landing, setLanding] = useState(true);\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [Id, setId] = useState('');\n\n//   const getCookie = (name) => {\n//     const value = `; ${document.cookie}`;\n//     const parts = value.split(`; ${name}=`);\n//     if (parts.length === 2) return parts.pop().split(';')[0];\n//     return null;\n//   };\n\n//   const csrfToken = getCookie('csrftoken');\n\n//   useEffect(() => {\n//     const checkAuthStatus = async () => {\n//       try {\n//         console.log('CSRF Token:', csrfToken);\n//         const response = await axios.get('http://127.0.0.1:8000/', {\n//           withCredentials: true,\n//           headers: {\n//             'X-CSRFToken': csrfToken,\n//           },\n//         });\n\n//         if (response.status === 200) {\n//           const { isAuthenticated } = response.data;\n//           setIsLoggedIn(isAuthenticated);\n//           setSignoff(isAuthenticated);\n//           setSignin(!isAuthenticated);\n//           setSignup(false);\n//           setLanding(isAuthenticated);\n//         }\n//       } catch (error) {\n//         console.error('Error checking login status:', error);\n//         setIsLoggedIn(false);\n//         setSignin(true);\n//         setSignup(false);\n//         setSignoff(false);\n//         setLanding(true);\n//       }\n//     };\n\n//     checkAuthStatus();\n//   }, [csrfToken]);  // Re-run this effect if csrfToken changes\n\n//   // Function to toggle signup\n//   const toggleSignup = () => {\n//     setSignup(false);\n//     setSignin(true);\n//   };\n\n//   // Function to toggle signin\n//   const toggleSignin = () => {\n//     setSignup(true);\n//     setSignin(false);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Navbar \n//         signup={signup} \n//         signin={signin} \n//         signoff={signoff} \n//         toggleSignup={toggleSignup} \n//         toggleSignin={toggleSignin} \n//       />\n//       {landing && (\n//         <Landing \n//           signup={signup} \n//           signin={signin} \n//           setOtpModalOpen={setOtpModalOpen} \n//           setId={setId}\n//         />\n//       )}\n//       {isLoggedIn ? (\n//         <Homeview />\n//       ) : (\n//         <OtpModal \n//           isOpen={isOtpModalOpen} \n//           onClose={() => setOtpModalOpen(false)} \n//           Id={Id} \n//           setIsLoggedIn={setIsLoggedIn} \n//           setSignoff={setSignoff} \n//           setSignin={setSignin} \n//           setSignup={setSignup} \n//           setLanding={setLanding} \n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Landing","useEffect","useState","OtpModal","Homeview","axios","jsxDEV","_jsxDEV","App","_s","signup","setSignup","signin","setSignin","signoff","setSignoff","isOtpModalOpen","setOtpModalOpen","landing","setLanding","isLoggedIn","setIsLoggedIn","Id","setId","getJwtToken","localStorage","getItem","checkAuthStatus","token","Error","response","get","headers","Authorization","status","error","console","alert","removeItem","toggleSignup","toggleSignin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/to-do-list/frontend_todo/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './navbar';\nimport Landing from './landingpage';\nimport { useEffect, useState } from 'react';\nimport OtpModal from './otp';\nimport Homeview from './homeview';\nimport axios from 'axios';\n\nfunction App() {\n  const [signup, setSignup] = useState(false);\n  const [signin, setSignin] = useState(true);\n  const [signoff, setSignoff] = useState(false);\n  const [isOtpModalOpen, setOtpModalOpen] = useState(false);\n  const [landing, setLanding] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [Id, setId] = useState('');\n\n  const getJwtToken = () => localStorage.getItem('access_token');\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = getJwtToken();\n\n      if (!token) {\n        throw new Error('No token found');\n      }\n\n      const response = await axios.get('http://127.0.0.1:8000/', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      if (response.status === 200) {\n        setIsLoggedIn(true);\n        setSignoff(true);\n        setSignin(false);\n        setSignup(false);\n        setLanding(false);\n      } else {\n        throw new Error('Token invalid');\n      }\n    } catch (error) {\n      console.error('Error checking login status:', error);\n\n      // Handle token expiry and reset authentication state\n      if (error.response && error.response.status === 401) {\n        // Handle 401 unauthorized error (token expired)\n        alert('Session expired. Please log in again.');\n        localStorage.removeItem('access_token'); // Remove expired token\n        setIsLoggedIn(false);\n        setSignin(true);\n        setSignup(false);\n        setSignoff(false);\n        setLanding(true);\n      } else {\n        // Handle any other errors\n        setIsLoggedIn(false);\n        setSignin(true);\n        setSignup(false);\n        setSignoff(false);\n        setLanding(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const toggleSignup = () => {\n    setSignup(true);\n    setSignin(false);\n  };\n\n  const toggleSignin = () => {\n    setSignup(false);\n    setSignin(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar \n        signup={signup} \n        signin={signin} \n        signoff={signoff} \n        toggleSignup={toggleSignup} \n        toggleSignin={toggleSignin} \n      />\n      {landing && (\n        <Landing \n          signup={signup} \n          signin={signin} \n          setOtpModalOpen={setOtpModalOpen} \n          setId={setId} \n        />\n      )}\n      {isLoggedIn ? (\n        <Homeview />\n      ) : (\n        <OtpModal \n          isOpen={isOtpModalOpen} \n          onClose={() => setOtpModalOpen(false)} \n          Id={Id} \n          setIsLoggedIn={setIsLoggedIn} \n          setSignoff={setSignoff} \n          setSignin={setSignin} \n          setSignup={setSignup} \n          setLanding={setLanding} \n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// import './App.css';\n// import Navbar from './navbar';\n// import Landing from './landingpage';\n// import { useEffect, useState } from 'react';\n// import OtpModal from './otp';\n// import Homeview from './homeview';\n// import axios from 'axios';\n\n// function App() {\n//   const [signup, setSignup] = useState(false);\n//   const [signin, setSignin] = useState(true);\n//   const [signoff, setSignoff] = useState(false);\n//   const [isOtpModalOpen, setOtpModalOpen] = useState(false);\n//   const [landing, setLanding] = useState(true);\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [Id, setId] = useState('');\n\n//   const getCookie = (name) => {\n//     const value = `; ${document.cookie}`;\n//     const parts = value.split(`; ${name}=`);\n//     if (parts.length === 2) return parts.pop().split(';')[0];\n//     return null;\n//   };\n\n//   const csrfToken = getCookie('csrftoken');\n\n//   useEffect(() => {\n//     const checkAuthStatus = async () => {\n//       try {\n//         console.log('CSRF Token:', csrfToken);\n//         const response = await axios.get('http://127.0.0.1:8000/', {\n//           withCredentials: true,\n//           headers: {\n//             'X-CSRFToken': csrfToken,\n//           },\n//         });\n\n//         if (response.status === 200) {\n//           const { isAuthenticated } = response.data;\n//           setIsLoggedIn(isAuthenticated);\n//           setSignoff(isAuthenticated);\n//           setSignin(!isAuthenticated);\n//           setSignup(false);\n//           setLanding(isAuthenticated);\n//         }\n//       } catch (error) {\n//         console.error('Error checking login status:', error);\n//         setIsLoggedIn(false);\n//         setSignin(true);\n//         setSignup(false);\n//         setSignoff(false);\n//         setLanding(true);\n//       }\n//     };\n\n//     checkAuthStatus();\n//   }, [csrfToken]);  // Re-run this effect if csrfToken changes\n\n//   // Function to toggle signup\n//   const toggleSignup = () => {\n//     setSignup(false);\n//     setSignin(true);\n//   };\n\n//   // Function to toggle signin\n//   const toggleSignin = () => {\n//     setSignup(true);\n//     setSignin(false);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Navbar \n//         signup={signup} \n//         signin={signin} \n//         signoff={signoff} \n//         toggleSignup={toggleSignup} \n//         toggleSignin={toggleSignin} \n//       />\n//       {landing && (\n//         <Landing \n//           signup={signup} \n//           signin={signin} \n//           setOtpModalOpen={setOtpModalOpen} \n//           setId={setId}\n//         />\n//       )}\n//       {isLoggedIn ? (\n//         <Homeview />\n//       ) : (\n//         <OtpModal \n//           isOpen={isOtpModalOpen} \n//           onClose={() => setOtpModalOpen(false)} \n//           Id={Id} \n//           setIsLoggedIn={setIsLoggedIn} \n//           setSignoff={setSignoff} \n//           setSignin={setSignin} \n//           setSignup={setSignup} \n//           setLanding={setLanding} \n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
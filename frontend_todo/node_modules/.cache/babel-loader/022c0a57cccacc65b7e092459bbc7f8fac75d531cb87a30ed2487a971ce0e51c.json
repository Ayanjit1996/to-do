{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/to-do-list/frontend_todo/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './navbar';\nimport Landing from './landingpage';\nimport { useEffect, useState } from 'react';\nimport OtpModal from './otp';\nimport Homeview from './homeview';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [signup, setSignup] = useState(false);\n  const [signin, setSignin] = useState(true);\n  const [signoff, setSignoff] = useState(false);\n  const [isOtpModalOpen, setOtpModalOpen] = useState(false);\n  const [landing, setLanding] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [Id, setId] = useState('');\n\n  // // Corrected getCookie function\n  // const getCookie = (name) => {\n  //   const value = `; ${document.cookie}`;\n  //   const parts = value.split(`; ${name}=`);\n  //   if (parts.length === 2) return parts.pop().split(';')[0];\n  //   return null;\n  // };\n\n  // // Fetch CSRF token from cookies\n  // const csrfToken = getCookie('csrftoken');\n\n  // useEffect(() => {\n  //   const checkAuthStatus = async () => {\n  //     try {\n  //       console.log('CSRF Token:', csrfToken);  // For debugging\n\n  //       // Ensure that sessionid and csrftoken cookies are sent by setting withCredentials to true\n  //       const response = await axios.get('http://127.0.0.1:8000/', {\n  //         withCredentials: true,  // Ensures cookies (sessionid) are sent\n  //         headers: {\n  //           'X-CSRFToken': csrfToken,  // Send CSRF token along with request\n  //         },\n  //       });\n\n  //       if (response.status === 200) {\n  //         const { isAuthenticated } = response.data;\n  //         setIsLoggedIn(isAuthenticated);\n  //         setSignoff(isAuthenticated);\n  //         setSignin(!isAuthenticated);\n  //         setSignup(false);\n  //         setLanding(isAuthenticated);\n  //       }\n  //     } catch (error) {\n  //       console.error('Error checking login status:', error);\n  //       setIsLoggedIn(false);\n  //       setSignin(true);\n  //       setSignup(false);\n  //       setSignoff(false);\n  //       setLanding(true);\n  //     }\n  //   };\n\n  //   checkAuthStatus();\n  // }, [csrfToken]);  // Re-run this effect if csrfToken changes\n\n  useEffect(() => {\n    const getCsrfToken = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/csrf/', {\n          withCredentials: true\n        });\n        console.log('CSRF Token from Django:', response.data.csrfToken);\n        document.cookie = `csrftoken=${response.data.csrfToken}; path=/`;\n      } catch (error) {\n        console.error('Error fetching CSRF token:', error);\n      }\n    };\n    getCsrfToken();\n  }, []);\n\n  // Function to toggle signup\n  const toggleSignup = () => {\n    setSignup(false);\n    setSignin(true);\n  };\n\n  // Function to toggle signin\n  const toggleSignin = () => {\n    setSignup(true);\n    setSignin(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      signup: signup,\n      signin: signin,\n      signoff: signoff,\n      toggleSignup: toggleSignup,\n      toggleSignin: toggleSignin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), landing && /*#__PURE__*/_jsxDEV(Landing, {\n      signup: signup,\n      signin: signin,\n      setOtpModalOpen: setOtpModalOpen,\n      setId: setId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(Homeview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(OtpModal, {\n      isOpen: isOtpModalOpen,\n      onClose: () => setOtpModalOpen(false),\n      Id: Id,\n      setIsLoggedIn: setIsLoggedIn,\n      setSignoff: setSignoff,\n      setSignin: setSignin,\n      setSignup: setSignup,\n      setLanding: setLanding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jotw+crOR8AYsdRuNxINtzKjOi8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Landing","useEffect","useState","OtpModal","Homeview","axios","jsxDEV","_jsxDEV","App","_s","signup","setSignup","signin","setSignin","signoff","setSignoff","isOtpModalOpen","setOtpModalOpen","landing","setLanding","isLoggedIn","setIsLoggedIn","Id","setId","getCsrfToken","response","get","withCredentials","console","log","data","csrfToken","document","cookie","error","toggleSignup","toggleSignin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/to-do-list/frontend_todo/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './navbar';\nimport Landing from './landingpage';\nimport { useEffect, useState } from 'react';\nimport OtpModal from './otp';\nimport Homeview from './homeview';\nimport axios from 'axios';\n\nfunction App() {\n  const [signup, setSignup] = useState(false);\n  const [signin, setSignin] = useState(true);\n  const [signoff, setSignoff] = useState(false);\n  const [isOtpModalOpen, setOtpModalOpen] = useState(false);\n  const [landing, setLanding] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [Id, setId] = useState('');\n\n  // // Corrected getCookie function\n  // const getCookie = (name) => {\n  //   const value = `; ${document.cookie}`;\n  //   const parts = value.split(`; ${name}=`);\n  //   if (parts.length === 2) return parts.pop().split(';')[0];\n  //   return null;\n  // };\n\n  // // Fetch CSRF token from cookies\n  // const csrfToken = getCookie('csrftoken');\n\n  // useEffect(() => {\n  //   const checkAuthStatus = async () => {\n  //     try {\n  //       console.log('CSRF Token:', csrfToken);  // For debugging\n\n  //       // Ensure that sessionid and csrftoken cookies are sent by setting withCredentials to true\n  //       const response = await axios.get('http://127.0.0.1:8000/', {\n  //         withCredentials: true,  // Ensures cookies (sessionid) are sent\n  //         headers: {\n  //           'X-CSRFToken': csrfToken,  // Send CSRF token along with request\n  //         },\n  //       });\n\n  //       if (response.status === 200) {\n  //         const { isAuthenticated } = response.data;\n  //         setIsLoggedIn(isAuthenticated);\n  //         setSignoff(isAuthenticated);\n  //         setSignin(!isAuthenticated);\n  //         setSignup(false);\n  //         setLanding(isAuthenticated);\n  //       }\n  //     } catch (error) {\n  //       console.error('Error checking login status:', error);\n  //       setIsLoggedIn(false);\n  //       setSignin(true);\n  //       setSignup(false);\n  //       setSignoff(false);\n  //       setLanding(true);\n  //     }\n  //   };\n\n  //   checkAuthStatus();\n  // }, [csrfToken]);  // Re-run this effect if csrfToken changes\n\n  useEffect(() => {\n    const getCsrfToken = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/csrf/', {\n          withCredentials: true\n        });\n        console.log('CSRF Token from Django:', response.data.csrfToken);\n        document.cookie = `csrftoken=${response.data.csrfToken}; path=/`;\n      } catch (error) {\n        console.error('Error fetching CSRF token:', error);\n      }\n    };\n    getCsrfToken();\n  }, []);\n  \n  // Function to toggle signup\n  const toggleSignup = () => {\n    setSignup(false);\n    setSignin(true);\n  };\n\n  // Function to toggle signin\n  const toggleSignin = () => {\n    setSignup(true);\n    setSignin(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar \n        signup={signup} \n        signin={signin} \n        signoff={signoff} \n        toggleSignup={toggleSignup} \n        toggleSignin={toggleSignin} \n      />\n      {landing && (\n        <Landing \n          signup={signup} \n          signin={signin} \n          setOtpModalOpen={setOtpModalOpen} \n          setId={setId}\n        />\n      )}\n      {isLoggedIn ? (\n        <Homeview />\n      ) : (\n        <OtpModal \n          isOpen={isOtpModalOpen} \n          onClose={() => setOtpModalOpen(false)} \n          Id={Id} \n          setIsLoggedIn={setIsLoggedIn} \n          setSignoff={setSignoff} \n          setSignin={setSignin} \n          setSignup={setSignup} \n          setLanding={setLanding} \n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
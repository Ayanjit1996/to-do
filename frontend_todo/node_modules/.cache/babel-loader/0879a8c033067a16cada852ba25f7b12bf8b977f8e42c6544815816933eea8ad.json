{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/to-do-list/frontend_todo/src/otp.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function OtpModal({ isOpen, onClose, Id, setIsLoggedIn, setSignoff, setSignin, setSignup, setLanding }) {\n//     const [otp, setOtp] = useState('');\n//     const [errorMessage, setErrorMessage] = useState('');\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         console.log(\"OTP Submitted:\", otp);\n\n//         try {\n//             const response = await axios.post(`http://localhost:8000/verify-otp/`, {\n//                 otp: otp,\n//                 cred: Id\n//             }, { withCredentials: true }); \n\n//             console.log('Response:', response);\n//             console.log('Session ID:', document.cookie);\n\n//             if (response.status === 200) {\n//                 console.log('OTP verification successful:', response.data);\n//                 alert('OTP verified successfully!');\n//                 setIsLoggedIn(true);\n//                 setSignoff(true);\n//                 setSignin(false);\n//                 setSignup(false);\n//                 setLanding(false);\n//                 onClose(); \n//             }\n//         } catch (error) {\n//             console.error('Error during OTP verification:', error.response ? error.response.data : error.message);\n//             setErrorMessage(error.response?.data?.message || 'Error verifying OTP. Please try again.');\n//         }\n//     };\n\n//     const handleClose = () => {\n//         setOtp(''); \n//         setErrorMessage('');\n//         onClose();\n//     };\n\n//     if (!isOpen) return null; \n\n//     return (\n//         <div className=\"otp-modal-overlay\">\n//             <div className=\"otp-modal\">\n//                 <h2>Enter OTP</h2>\n//                 <h6>OTP sent to your email address</h6>\n//                 {errorMessage && <div className=\"alert alert-danger\">{errorMessage}</div>}\n//                 <form className=\"d-flex flex-column\" onSubmit={handleSubmit}>\n//                     <input\n//                         type=\"text\"\n//                         maxLength={6}\n//                         value={otp}\n//                         onChange={(e) => setOtp(e.target.value)}\n//                         placeholder=\"Enter 6-digit OTP\"\n//                         required\n//                         className=\"mb-3\"\n//                         pattern=\"\\d{6}\" // Ensures the input is exactly 6 digits\n//                         inputMode=\"numeric\" // Opens numeric keyboard on mobile\n//                     />\n//                     <div className=\"d-flex justify-content-between\">\n//                         <button className=\"btn btn-primary fw-bold\" type=\"button\" onClick={handleClose}>\n//                             Close\n//                         </button>\n//                         <button className=\"btn btn-primary fw-bold\" type=\"submit\">\n//                             Verify\n//                         </button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default OtpModal;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OtpModal({\n  isOpen,\n  onClose,\n  Id,\n  setIsLoggedIn,\n  setSignoff,\n  setSignin,\n  setSignup,\n  setLanding\n}) {\n  _s();\n  const [otp, setOtp] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"OTP Submitted:\", otp);\n    try {\n      // Send OTP and Id to the backend for verification and expect a JWT token in response\n      const response = await axios.post(`http://localhost:8000/verify-otp/`, {\n        otp: otp,\n        cred: Id\n      });\n      console.log('Response:', response);\n\n      // If OTP is successfully verified, the backend should send a JWT token\n      if (response.status === 200) {\n        const {\n          access_token\n        } = response.data; // Get the access token from the response\n\n        // Save the JWT token in localStorage or sessionStorage\n        localStorage.setItem('access_token', access_token);\n        console.log('OTP verification successful:', response.data);\n        alert('OTP verified successfully!');\n\n        // Update state to reflect the logged-in status\n        setIsLoggedIn(true);\n        setSignoff(true);\n        setSignin(false);\n        setSignup(false);\n        setLanding(false);\n\n        // Close the modal\n        onClose();\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error during OTP verification:', error.response ? error.response.data : error.message);\n      setErrorMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error verifying OTP. Please try again.');\n    }\n  };\n  const handleClose = () => {\n    setOtp('');\n    setErrorMessage('');\n    onClose();\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"OTP sent to your email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"d-flex flex-column\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: 6,\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          placeholder: \"Enter 6-digit OTP\",\n          required: true,\n          className: \"mb-3\",\n          pattern: \"\\\\d{6}\" // Ensures the input is exactly 6 digits\n          ,\n          inputMode: \"numeric\" // Opens numeric keyboard on mobile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary fw-bold\",\n            type: \"button\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary fw-bold\",\n            type: \"submit\",\n            children: \"Verify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s(OtpModal, \"shLMYBT8AC9J4GumevoALKESKPM=\");\n_c = OtpModal;\nexport default OtpModal;\nvar _c;\n$RefreshReg$(_c, \"OtpModal\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OtpModal","isOpen","onClose","Id","setIsLoggedIn","setSignoff","setSignin","setSignup","setLanding","_s","otp","setOtp","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","console","log","response","post","cred","status","access_token","data","localStorage","setItem","alert","error","_error$response","_error$response$data","message","handleClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","maxLength","value","onChange","target","placeholder","required","pattern","inputMode","onClick","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/to-do-list/frontend_todo/src/otp.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function OtpModal({ isOpen, onClose, Id, setIsLoggedIn, setSignoff, setSignin, setSignup, setLanding }) {\n//     const [otp, setOtp] = useState('');\n//     const [errorMessage, setErrorMessage] = useState('');\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         console.log(\"OTP Submitted:\", otp);\n\n//         try {\n//             const response = await axios.post(`http://localhost:8000/verify-otp/`, {\n//                 otp: otp,\n//                 cred: Id\n//             }, { withCredentials: true }); \n            \n//             console.log('Response:', response);\n//             console.log('Session ID:', document.cookie);\n\n//             if (response.status === 200) {\n//                 console.log('OTP verification successful:', response.data);\n//                 alert('OTP verified successfully!');\n//                 setIsLoggedIn(true);\n//                 setSignoff(true);\n//                 setSignin(false);\n//                 setSignup(false);\n//                 setLanding(false);\n//                 onClose(); \n//             }\n//         } catch (error) {\n//             console.error('Error during OTP verification:', error.response ? error.response.data : error.message);\n//             setErrorMessage(error.response?.data?.message || 'Error verifying OTP. Please try again.');\n//         }\n//     };\n\n//     const handleClose = () => {\n//         setOtp(''); \n//         setErrorMessage('');\n//         onClose();\n//     };\n\n//     if (!isOpen) return null; \n\n//     return (\n//         <div className=\"otp-modal-overlay\">\n//             <div className=\"otp-modal\">\n//                 <h2>Enter OTP</h2>\n//                 <h6>OTP sent to your email address</h6>\n//                 {errorMessage && <div className=\"alert alert-danger\">{errorMessage}</div>}\n//                 <form className=\"d-flex flex-column\" onSubmit={handleSubmit}>\n//                     <input\n//                         type=\"text\"\n//                         maxLength={6}\n//                         value={otp}\n//                         onChange={(e) => setOtp(e.target.value)}\n//                         placeholder=\"Enter 6-digit OTP\"\n//                         required\n//                         className=\"mb-3\"\n//                         pattern=\"\\d{6}\" // Ensures the input is exactly 6 digits\n//                         inputMode=\"numeric\" // Opens numeric keyboard on mobile\n//                     />\n//                     <div className=\"d-flex justify-content-between\">\n//                         <button className=\"btn btn-primary fw-bold\" type=\"button\" onClick={handleClose}>\n//                             Close\n//                         </button>\n//                         <button className=\"btn btn-primary fw-bold\" type=\"submit\">\n//                             Verify\n//                         </button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default OtpModal;\n\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction OtpModal({ isOpen, onClose, Id, setIsLoggedIn, setSignoff, setSignin, setSignup, setLanding }) {\n    const [otp, setOtp] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log(\"OTP Submitted:\", otp);\n\n        try {\n            // Send OTP and Id to the backend for verification and expect a JWT token in response\n            const response = await axios.post(`http://localhost:8000/verify-otp/`, {\n                otp: otp,\n                cred: Id\n            });\n\n            console.log('Response:', response);\n\n            // If OTP is successfully verified, the backend should send a JWT token\n            if (response.status === 200) {\n                const { access_token } = response.data;  // Get the access token from the response\n\n                // Save the JWT token in localStorage or sessionStorage\n                localStorage.setItem('access_token', access_token);\n\n                console.log('OTP verification successful:', response.data);\n                alert('OTP verified successfully!');\n                \n                // Update state to reflect the logged-in status\n                setIsLoggedIn(true);\n                setSignoff(true);\n                setSignin(false);\n                setSignup(false);\n                setLanding(false);\n                \n                // Close the modal\n                onClose(); \n            }\n        } catch (error) {\n            console.error('Error during OTP verification:', error.response ? error.response.data : error.message);\n            setErrorMessage(error.response?.data?.message || 'Error verifying OTP. Please try again.');\n        }\n    };\n\n    const handleClose = () => {\n        setOtp(''); \n        setErrorMessage('');\n        onClose();\n    };\n\n    if (!isOpen) return null; \n\n    return (\n        <div className=\"otp-modal-overlay\">\n            <div className=\"otp-modal\">\n                <h2>Enter OTP</h2>\n                <h6>OTP sent to your email address</h6>\n                {errorMessage && <div className=\"alert alert-danger\">{errorMessage}</div>}\n                <form className=\"d-flex flex-column\" onSubmit={handleSubmit}>\n                    <input\n                        type=\"text\"\n                        maxLength={6}\n                        value={otp}\n                        onChange={(e) => setOtp(e.target.value)}\n                        placeholder=\"Enter 6-digit OTP\"\n                        required\n                        className=\"mb-3\"\n                        pattern=\"\\d{6}\" // Ensures the input is exactly 6 digits\n                        inputMode=\"numeric\" // Opens numeric keyboard on mobile\n                    />\n                    <div className=\"d-flex justify-content-between\">\n                        <button className=\"btn btn-primary fw-bold\" type=\"button\" onClick={handleClose}>\n                            Close\n                        </button>\n                        <button className=\"btn btn-primary fw-bold\" type=\"submit\">\n                            Verify\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default OtpModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
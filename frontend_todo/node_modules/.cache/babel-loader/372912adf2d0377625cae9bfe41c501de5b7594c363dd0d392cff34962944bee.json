{"ast":null,"code":"var _jsxFileName = \"/Users/ayanjitdutta/to-do-list/frontend_todo/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './navbar';\nimport Landing from './landingpage';\nimport { useEffect, useState } from 'react';\nimport OtpModal from './otp';\nimport Homeview from './homeview';\nimport { MakeAuthenticatedRequest } from './APIHelper';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [signup, setSignup] = useState(false);\n  const [signin, setSignin] = useState(true);\n  const [signoff, setSignoff] = useState(false);\n  const [isOtpModalOpen, setOtpModalOpen] = useState(false);\n  const [landing, setLanding] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [Id, setId] = useState('');\n  const [taskList, setTaskList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refresh, setRefresh] = useState(false);\n  const checkAuthStatus = async () => {\n    try {\n      const response = await MakeAuthenticatedRequest('http://127.0.0.1:8000/');\n      if (response.status === 200) {\n        setIsLoggedIn(true);\n        setSignoff(true);\n        setSignin(false);\n        setSignup(false);\n        setLanding(false);\n        setTaskList(response.data);\n      } else {\n        throw new Error('Token invalid');\n      }\n    } catch (error) {\n      console.error('Error checking login status:', error);\n      setIsLoggedIn(false);\n      setSignin(true);\n      setSignup(false);\n      setSignoff(false);\n      setLanding(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (refresh) {\n      // Only fetch tasks if refresh is true\n      const fetchTasks = async () => {\n        try {\n          // Fetch tasks here\n          await checkAuthStatus(); // Assuming checkAuthStatus fetches tasks or verifies auth\n          console.log(\"Tasks refreshed\");\n        } catch (error) {\n          console.error(\"Error fetching tasks:\", error);\n        } finally {\n          setRefresh(false); // Reset refresh after fetching tasks\n        }\n      };\n      fetchTasks();\n    }\n  }, [refresh]);\n  const toggleSignup = () => {\n    setSignup(false);\n    setSignin(true);\n  };\n  const toggleSignin = () => {\n    setSignup(true);\n    setSignin(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center vh-100\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        signup: signup,\n        signin: signin,\n        signoff: signoff,\n        toggleSignup: toggleSignup,\n        toggleSignin: toggleSignin,\n        setIsLoggedIn: setIsLoggedIn,\n        setSignoff: setSignoff,\n        setSignin: setSignin,\n        setSignup: setSignup,\n        setLanding: setLanding\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), landing && /*#__PURE__*/_jsxDEV(Landing, {\n        signup: signup,\n        signin: signin,\n        setOtpModalOpen: setOtpModalOpen,\n        setId: setId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(Homeview, {\n        taskList: taskList,\n        setRefresh: setRefresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(OtpModal, {\n        isOpen: isOtpModalOpen,\n        onClose: () => setOtpModalOpen(false),\n        Id: Id,\n        setIsLoggedIn: setIsLoggedIn,\n        setSignoff: setSignoff,\n        setSignin: setSignin,\n        setSignup: setSignup,\n        setLanding: setLanding,\n        setRefresh: setRefresh // Pass setRefresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"1Fbtt1bozRD81GoOOz9Y+6CgCQQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Landing","useEffect","useState","OtpModal","Homeview","MakeAuthenticatedRequest","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","signup","setSignup","signin","setSignin","signoff","setSignoff","isOtpModalOpen","setOtpModalOpen","landing","setLanding","isLoggedIn","setIsLoggedIn","Id","setId","taskList","setTaskList","loading","setLoading","refresh","setRefresh","checkAuthStatus","response","status","data","Error","error","console","fetchTasks","log","toggleSignup","toggleSignin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/ayanjitdutta/to-do-list/frontend_todo/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './navbar';\nimport Landing from './landingpage';\nimport { useEffect, useState } from 'react';\nimport OtpModal from './otp';\nimport Homeview from './homeview';\nimport { MakeAuthenticatedRequest } from './APIHelper';\n\nfunction App() {\n    const [signup, setSignup] = useState(false);\n    const [signin, setSignin] = useState(true);\n    const [signoff, setSignoff] = useState(false);\n    const [isOtpModalOpen, setOtpModalOpen] = useState(false);\n    const [landing, setLanding] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [Id, setId] = useState('');\n    const [taskList, setTaskList] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [refresh, setRefresh] = useState(false);\n\n    const checkAuthStatus = async () => {\n        try {\n            const response = await MakeAuthenticatedRequest('http://127.0.0.1:8000/');\n            if (response.status === 200) {\n                setIsLoggedIn(true);\n                setSignoff(true);\n                setSignin(false);\n                setSignup(false);\n                setLanding(false);\n                setTaskList(response.data);\n            } else {\n                throw new Error('Token invalid');\n            }\n        } catch (error) {\n            console.error('Error checking login status:', error);\n            setIsLoggedIn(false);\n            setSignin(true);\n            setSignup(false);\n            setSignoff(false);\n            setLanding(true);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n      if (refresh) {\n          // Only fetch tasks if refresh is true\n          const fetchTasks = async () => {\n              try {\n                  // Fetch tasks here\n                  await checkAuthStatus();  // Assuming checkAuthStatus fetches tasks or verifies auth\n                  console.log(\"Tasks refreshed\");\n              } catch (error) {\n                  console.error(\"Error fetching tasks:\", error);\n              } finally {\n                  setRefresh(false);  // Reset refresh after fetching tasks\n              }\n          };\n  \n          fetchTasks();\n      }\n  }, [refresh]);\n  \n\n    const toggleSignup = () => {\n        setSignup(false);\n        setSignin(true);\n    };\n\n    const toggleSignin = () => {\n        setSignup(true);\n        setSignin(false);\n    };\n\n    return (\n        <div className=\"App\">\n            {loading ? (\n                <div className=\"d-flex justify-content-center align-items-center vh-100\">\n                    <h4>Loading...</h4>\n                </div>\n            ) : (\n                <>\n                    <Navbar \n                        signup={signup} \n                        signin={signin} \n                        signoff={signoff} \n                        toggleSignup={toggleSignup} \n                        toggleSignin={toggleSignin}\n                        setIsLoggedIn={setIsLoggedIn} \n                        setSignoff={setSignoff}       \n                        setSignin={setSignin}         \n                        setSignup={setSignup}         \n                        setLanding={setLanding}\n                    />\n                    {landing && (\n                        <Landing \n                            signup={signup} \n                            signin={signin} \n                            setOtpModalOpen={setOtpModalOpen} \n                            setId={setId}\n                        />\n                    )}\n                    {isLoggedIn ? (\n                        <Homeview taskList={taskList} setRefresh={setRefresh}/>\n                    ) : (\n                        <OtpModal \n                            isOpen={isOtpModalOpen} \n                            onClose={() => setOtpModalOpen(false)} \n                            Id={Id} \n                            setIsLoggedIn={setIsLoggedIn} \n                            setSignoff={setSignoff} \n                            setSignin={setSignin} \n                            setSignup={setSignup} \n                            setLanding={setLanding} \n                            setRefresh={setRefresh} // Pass setRefresh\n                        />\n                    )}\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}